for_training: True
year: 2018
input_path: /nfs/dust/cms/user/rasp/storage/cardinia/{year}/InputDNNmt_June9-PAS
input_filename_template: 'mt-NOMINAL_ntuple_{sample_name}_{year}.root' # assume the same pattern for all input sample files
input_tree_name: TauCheck
input_samples:
  - GluGluHToUncorrTauTau: # name of the data sample
      ggH: # name of the process within the sample to be extracted
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5)' # selection cut to be applied
        class: 0 # class ID which is assigned to this process
  - VBFHToUncorrTauTau:
      VBF:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5)'
        class: 0
  - WHToUncorrTauTau:
      WH:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5)'
        class: 0
  - ZHToUncorrTauTau:
      ZH:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5)'
        class: 0
  - Diboson:
      VVT:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5) & (gen_match_1==4) & (gen_match_2==5)'
        class: 1
      VVL:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5) & (gen_match_2!=6) & ((gen_match_1!=4) | (gen_match_2!=5))'
        class: 2
      VVJ:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5) & (gen_match_2 == 6)'
        class: 2
  - DYJets:
      ZTT:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5) & (gen_match_1==4) & (gen_match_2==5)'
        class: 1
      ZLL:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5) & (gen_match_2!=6) & ((gen_match_1!=4) | (gen_match_2!=5))'
        class: 2
      ZJJ:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5) & (gen_match_2 == 6)'
        class: 2
  - EWKZ:
      EWKZT:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5) & (gen_match_1==4) & (gen_match_2==5)'
        class: 1
      EWKZL:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5) & (gen_match_2!=6) & ((gen_match_1!=4) | (gen_match_2!=5))'
        class: 2
      EWKZJ:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5) & (gen_match_2 == 6)'
        class: 2
  - TTbar:
      TTT:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5) & (gen_match_1==4) & (gen_match_2==5)'
        class: 1
      TTL:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5) & (gen_match_2!=6) & ((gen_match_1!=4) | (gen_match_2!=5))'
        class: 2
      TTJ:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5) & (gen_match_2 == 6)'
        class: 2
  - WJets:
      WJets:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os>0.5)'
        class: 2
  - SingleMuon:
      QCD:
        cut: '(byMediumDeepTau2017v2p1VSjet_2>0.5) & (iso_1<0.15) & (os<0.5)'
        class: 2

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

cont_features: # will be stored in the output file and used for training
  - pt_1
  - pt_2
  - jpt_1
  - jpt_2
  - dijetpt
  - jdeta
  - m_sv
  - mjj
  - m_vis
  - puppimt_1
  - pt_tt
  - puppimet
cat_features: # will be stored in the output file and used for training
  - njets
misc_features: # miscellaneous features for intermediate computations, not necessarily stored (see preprocess.py)
  - weight

train_size: 0.8
norm: True
pca: False

output_path: data/{year}/multi/dev/skims/
output_filename_template: '{sample_name}.hdf5'
output_samples:
  - train
  - test
pipe_name: 'input_pipe' # filename for saving the feature scaling pipe
n_folds: 10 # will split output sample into these number of folds before saving to hdf5 file
